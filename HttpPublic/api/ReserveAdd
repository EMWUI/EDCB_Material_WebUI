dofile(mg.document_root..'\\api\\util.lua')

post=ReadPost()

AssertCsrf(post)

added=false
onid=tonumber(mg.get_var(post, 'onid')) or 0
tsid=tonumber(mg.get_var(post, 'tsid')) or 0
sid=tonumber(mg.get_var(post, 'sid')) or 0
eid=tonumber(mg.get_var(post, 'eid')) or 0

if post then
  r={recSetting={}}
  r.onid=onid
  r.tsid=tsid
  r.sid=sid
  r.eid=eid
  presetID=tonumber(mg.get_var(post, 'presetID'))
  recMode=tonumber(mg.get_var(post, 'recMode'))
  tuijyuuFlag=tonumber(mg.get_var(post, 'tuijyuuFlag')) or 0
  priority=tonumber(mg.get_var(post, 'priority'))
  pittariFlag=tonumber(mg.get_var(post, 'pittariFlag')) or 0
  suspendMode=tonumber(mg.get_var(post, 'suspendMode'))
  rebootFlag=mg.get_var(post, 'rebootFlag')
  useDefMarginFlag=mg.get_var(post, 'useDefMarginFlag')
  startMargin=tonumber(mg.get_var(post, 'startMargin'))
  endMargin=tonumber(mg.get_var(post, 'endMargin'))
  serviceMode=mg.get_var(post, 'serviceMode')
  serviceMode_1=mg.get_var(post, 'serviceMode_1')
  serviceMode_2=mg.get_var(post, 'serviceMode_2')
  continueRecFlag=mg.get_var(post, 'continueRecFlag')
  tunerID=tonumber(mg.get_var(post, 'tunerID'))
  partialRecFlag=mg.get_var(post, 'partialRecFlag')
  eventInfo=edcb.SearchEpg(r.onid, r.tsid, r.sid, r.eid)
  if eventInfo and eventInfo.startTime and eventInfo.durationSecond and
     presetID and
     recMode and
     priority and
     suspendMode and
     (useDefMarginFlag or startMargin and endMargin) and tunerID
  then
    r.title=eventInfo.shortInfo and eventInfo.shortInfo.event_name or ''
    r.startTime=eventInfo.startTime
    r.startTimeEpg=eventInfo.startTime
    r.durationSecond=eventInfo.durationSecond
    r.stationName=''
    for i,v in ipairs(edcb.GetServiceList() or {}) do
      if v.onid==r.onid and v.tsid==r.tsid and v.sid==r.sid then
        r.stationName=v.service_name
        break
      end
    end
    rs=r.recSetting
    rs.batFilePath=mg.get_var(post, 'batFilePath')
    rs.recFolderList={}
    for i=0,10000 do
     if not mg.get_var(post, 'recFolder', i) then break end
      table.insert(rs.recFolderList, {
        recFolder=mg.get_var(post, 'recFolder', i),
        writePlugIn=mg.get_var(post, 'writePlugIn', i),
        recNamePlugIn=mg.get_var(post, 'recNamePlugIn', i) and mg.get_var(post, 'recNamePlugIn', i)..(mg.get_var(post, 'recName', i) and #mg.get_var(post, 'recName', i)>0 and '?'..mg.get_var(post, 'recName', i) or '') or ''
      } )
    end
    rs.partialRecFolder={}
    for i=0,10000 do
     if not mg.get_var(post, 'partialrecFolder', i) then break end
      table.insert(rs.partialRecFolder, {
        recFolder=mg.get_var(post, 'partialrecFolder', i),
        writePlugIn=mg.get_var(post, 'partialwritePlugIn', i),
        recNamePlugIn=mg.get_var(post, 'partialrecNamePlugIn', i)..(mg.get_var(post, 'partialrecName', i) and #mg.get_var(post, 'partialrecName', i)>0 and '?'..mg.get_var(post, 'partialrecName', i) or '') or ''
      } )
    end
    rs.recMode=recMode
    rs.tuijyuuFlag=tuijyuuFlag~=0
    rs.priority=priority
    rs.pittariFlag=pittariFlag~=0
    rs.suspendMode=suspendMode
    rs.rebootFlag=rebootFlag~=nil
    if not useDefMarginFlag then
      rs.startMargin=startMargin
      rs.endMargin=endMargin
    end
    rs.serviceMode=serviceMode and 0 or 1+(serviceMode_1 and 16 or 0)+(serviceMode_2 and 32 or 0)
    rs.continueRecFlag=continueRecFlag~=nil
    rs.tunerID=tunerID
    rs.partialRecFlag=partialRecFlag and 1 or 0
    added=edcb.AddReserveData(r)
  end
end

if added then
  for i,v in ipairs(edcb.GetReserveData()) do
    if v.onid==onid and v.tsid==tsid and v.sid==sid and v.eid==eid then
      id=v.reserveID
      r=edcb.GetReserveData(id)
      break
    end
  end

  added='<reserveinfo><ID>'
    ..r.reserveID..'</ID><title>'
    ..r.title..'</title><startDate>'
    ..string.format('%d/%02d/%02d</startDate><startTime>%02d:%02d:%02d</startTime><startDayOfWeek>',
                    r.startTime.year, r.startTime.month, r.startTime.day, r.startTime.hour, r.startTime.min, r.startTime.sec)
    ..(r.startTime.wday-1)..'</startDayOfWeek><duration>'
    ..r.durationSecond..'</duration><service_name>'
    ..r.stationName..'</service_name><ONID>'
    ..r.onid..'</ONID><TSID>'
    ..r.tsid..'</TSID><SID>'
    ..r.sid..'</SID><eventID>'
    ..r.eid..'</eventID><comment>'
    ..r.comment..'</comment><overlapMode>'
    ..r.overlapMode..'</overlapMode><recsetting><recMode>'
    ..r.recSetting.recMode..'</recMode><priority>'
    ..r.recSetting.priority..'</priority><tuijyuuFlag>'
    ..(r.recSetting.tuijyuuFlag and 1 or 0)..'</tuijyuuFlag><serviceMode>'
    ..r.recSetting.serviceMode..'</serviceMode><pittariFlag>'
    ..(r.recSetting.pittariFlag and 1 or 0)..'</pittariFlag><batFilePath>'
    ..r.recSetting.batFilePath..'</batFilePath><recFolderList>'
  for j,w in ipairs(r.recSetting.recFolderList) do
    recName,recName2,recName3=string.match(w.recNamePlugIn, '^(.+%.dll)(%?(.*))??')
    recNamePlugInoption=option and '<recNamePlugIndll>'..(recName and recName or w.recNamePlugIn)..'</recNamePlugIndll><recNamePlugInoption>'..(recName3 and recName3 or '')..'</recNamePlugInoption>' or ''
    added=added..'<recFolderInfo><recFolder>'
      ..w.recFolder..'</recFolder><writePlugIn>'
      ..w.writePlugIn..'</writePlugIn><recNamePlugIn>'
      ..w.recNamePlugIn..'</recNamePlugIn>'
      ..recNamePlugInoption..'</recFolderInfo>'
  end
  added=added..'</recFolderList><suspendMode>'
    ..r.recSetting.suspendMode..'</suspendMode><rebootFlag>'
    ..(r.recSetting.rebootFlag and 1 or 0)..'</rebootFlag><useMargineFlag>'
    ..(r.recSetting.startMargin and 1 or 0)..'</useMargineFlag><startMargine>'
    ..(r.recSetting.startMargin or 0)..'</startMargine><endMargine>'
    ..(r.recSetting.endMargin or 0)..'</endMargine><continueRecFlag>'
    ..(r.recSetting.continueRecFlag and 1 or 0)..'</continueRecFlag><partialRecFlag>'
    ..r.recSetting.partialRecFlag..'</partialRecFlag><tunerID>'
    ..r.recSetting.tunerID..'</tunerID><partialRecFolder>'
  for j,w in ipairs(r.recSetting.partialRecFolder) do
    recName,recName2,recName3=string.match(w.recNamePlugIn, '^(.+%.dll)(%?(.*))??')
    recNamePlugInoption=option and '<recNamePlugIndll>'..(recName and recName or w.recNamePlugIn)..'</recNamePlugIndll><recNamePlugInoption>'..(recName3 and recName3 or '')..'</recNamePlugInoption>' or ''
    added=added..'<recFolderInfo><recFolder>'
      ..w.recFolder..'</recFolder><writePlugIn>'
      ..w.writePlugIn..'</writePlugIn><recNamePlugIn>'
      ..w.recNamePlugIn..'</recNamePlugIn>'
      ..recNamePlugInoption..'</recFolderInfo>'
  end
  added=added..'</partialRecFolder></recsetting><recFileNameList>'
  for j,w in ipairs(r.recFileNameList) do
    added=added..'<name>'..w..'</name>'
  end
  added=added..'</recFileNameList></reserveinfo>\r\n'
end

ct='<?xml version="1.0" encoding="UTF-8" ?'..'><entry>'
  ..(added and '<success>予約を追加しました</success>'..added..'</entry>' or '<err>予約を追加できませんでした</err></entry>')
mg.write('HTTP/1.1 200 OK\r\nContent-Type: text/xml\r\nContent-Length: '..#ct..'\r\nConnection: close\r\n\r\n', ct)
