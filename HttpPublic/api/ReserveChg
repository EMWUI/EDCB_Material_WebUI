dofile(mg.document_root..'\\api\\util.lua')

post=ReadPost()

AssertCsrf(post)

changed=false
r=edcb.GetReserveData(tonumber(mg.get_var(mg.request_info.query_string, 'id')) or 0)
if post and r then
  presetID=tonumber(mg.get_var(post, 'presetID'))
  recMode=tonumber(mg.get_var(post, 'recMode'))
  tuijyuuFlag=tonumber(mg.get_var(post, 'tuijyuuFlag')) or 0
  priority=tonumber(mg.get_var(post, 'priority'))
  pittariFlag=tonumber(mg.get_var(post, 'pittariFlag')) or 0
  suspendMode=tonumber(mg.get_var(post, 'suspendMode'))
  rebootFlag=mg.get_var(post, 'rebootFlag')
  useDefMarginFlag=mg.get_var(post, 'useDefMarginFlag')
  startMargin=tonumber(mg.get_var(post, 'startMargin'))
  endMargin=tonumber(mg.get_var(post, 'endMargin'))
  serviceMode=mg.get_var(post, 'serviceMode')
  serviceMode_1=mg.get_var(post, 'serviceMode_1')
  serviceMode_2=mg.get_var(post, 'serviceMode_2')
  continueRecFlag=mg.get_var(post, 'continueRecFlag')
  tunerID=tonumber(mg.get_var(post, 'tunerID'))
  partialRecFlag=mg.get_var(post, 'partialRecFlag')
  if presetID and
     recMode and
     priority and
     suspendMode and
     (useDefMarginFlag or startMargin and endMargin) and tunerID
  then
    rs=r.recSetting
    rs.batFilePath=mg.get_var(post, 'batFilePath')
    rs.recFolderList={}
    for i=0,10000 do
     if not mg.get_var(post, 'recFolder', i) then break end
      table.insert(rs.recFolderList, {
        recFolder=mg.get_var(post, 'recFolder', i),
        writePlugIn=mg.get_var(post, 'writePlugIn', i),
        recNamePlugIn=mg.get_var(post, 'recNamePlugIn', i) and mg.get_var(post, 'recNamePlugIn', i)..(mg.get_var(post, 'recName', i) and #mg.get_var(post, 'recName', i)>0 and '?'..mg.get_var(post, 'recName', i) or '') or ''
      } )
    end
    rs.partialRecFolder={}
    for i=0,10000 do
     if not mg.get_var(post, 'partialrecFolder', i) then break end
      table.insert(rs.partialRecFolder, {
        recFolder=mg.get_var(post, 'partialrecFolder', i),
        writePlugIn=mg.get_var(post, 'partialwritePlugIn', i),
        recNamePlugIn=mg.get_var(post, 'partialrecNamePlugIn', i)..(mg.get_var(post, 'partialrecName', i) and #mg.get_var(post, 'partialrecName', i)>0 and '?'..mg.get_var(post, 'partialrecName', i) or '') or ''
      } )
    end
    rs.recMode=recMode
    rs.tuijyuuFlag=tuijyuuFlag~=0
    rs.priority=priority
    rs.pittariFlag=pittariFlag~=0
    rs.suspendMode=suspendMode
    rs.rebootFlag=rebootFlag~=nil
    rs.startMargin=nil
    rs.endMargin=nil
    if not useDefMarginFlag then
      rs.startMargin=startMargin
      rs.endMargin=endMargin
    end
    rs.serviceMode=serviceMode and 0 or 1+(serviceMode_1 and 16 or 0)+(serviceMode_2 and 32 or 0)
    rs.continueRecFlag=continueRecFlag~=nil
    rs.tunerID=tunerID
    rs.partialRecFlag=partialRecFlag and 1 or 0
    changed=edcb.ChgReserveData(r)
  end
end

ct='<?xml version="1.0" encoding="UTF-8" ?'..'><entry>'
  ..(changed and '<success>予約を変更しました</success></entry>' or '<err>予約を変更できませんでした</err></entry>')
mg.write('HTTP/1.1 200 OK\r\nContent-Type: text/xml\r\nContent-Length: '..#ct..'\r\nConnection: close\r\n\r\n', ct)