status, lfs=pcall(require, 'lfs')
dofile(mg.document_root..'\\api\\util.lua')

path='Setting\\HttpPublic.ini'
ffmpeg=edcb.GetPrivateProfile('SET','ffmpeg','Tools\\ffmpeg',path)
LibraryPath=tonumber(edcb.GetPrivateProfile('SET','LibraryPath',0,path))~=0 and path or 'Common.ini'

MakeThumbs=mg.get_var(mg.request_info.query_string,'thumbs')

if MakeThumbs then
	AssertCsrf(mg.request_info.query_string)
end

ct={'<?xml version="1.0" encoding="UTF-8" ?'..'><entry>'}

if status then
  id=0
  function attrdir(path)
    local filelist={}
    for fname in lfs.dir(path) do
      if fname ~= '.' and fname ~= '..' then
        fpath=path..'\\'..fname
        fname=edcb.Convert('utf-8', 'cp932', fname)
        if lfs.attributes(fpath) then
          if lfs.attributes(fpath).mode == "directory" then
            if fname ~= 'chapters' then
              if MakeThumbs then
                attrdir(fpath)
              else
                id=id+1
                table.insert(ct, '<dir><name>'..fname:gsub('&', '&amp;')..'</name><id>'..id..'</id>')
                attrdir(fpath)
                table.insert(ct, '</dir>')
              end
            end
          elseif mg.get_mime_type(fname):find('^video/') or fname:lower():find('%.ts$') or fname:lower():find('%.m2ts$') then
            thumbs=edcb.FindFile and edcb.FindFile(mg.document_root..'\\thumbs\\'..fname..'.jpg', 1)
            if MakeThumbs then
              if not thumbs then
                f=edcb.io.popen(ffmpeg..' -i "'..edcb.Convert('utf-8', 'cp932', fpath)..'" -ss 5 -vframes 1 -f image2 -s 480x270 "'..mg.document_root..'\\thumbs\\'..fname..'.jpg'..'"')
                f:close()
              end
            else
              table.insert(filelist, '<file><name>'..fname:gsub('&', '&amp;')..'</name><path>'
                ..(Public and mg.url_encode(Public..'/'..fname):gsub('%%2f', '/')..'</path><public>1</public>'
                           or mg.url_encode(edcb.Convert('utf-8', 'cp932', fpath)):gsub('%%2f', '/')..'</path>')
                ..(thumbs and '<thumbs>'..mg.url_encode(fname..'.jpg')..'</thumbs>' or '')
                ..'</file>')
            end
          end
        else
          table.insert(ct, '<err>'..edcb.Convert('utf-8', 'cp932', f):gsub('&', '&amp;')..'</err>')
        end
      end
    end
    table.insert(ct, table.concat(filelist))
  end

  if not MakeThumbs then table.insert(ct, '<dir><name>ホーム</name><id>home</id>') end

  count=tonumber(edcb.GetPrivateProfile('SET','RecFolderNum',0,LibraryPath))-1
  for i=0,count do
    dir=edcb.GetPrivateProfile('SET','RecFolderPath'..i,'',LibraryPath)
    Public=NativeToDocumentPath(dir)
    if #dir>0 then
      if MakeThumbs then
        attrdir(edcb.Convert('cp932', 'utf-8', dir))
      else
        table.insert(ct, '<dir><name>'..(Public or dir)..'</name><id>'..(Public or dir):gsub(':\\', '_'):gsub('/', '_')..'</id>')
        attrdir(edcb.Convert('cp932', 'utf-8', dir))
        table.insert(ct, '</dir>')
      end
    end
  end

  if MakeThumbs then
    table.insert(ct, '<info>サムネを作成しました</info></entry>')
  else
    table.insert(ct, '</dir></entry>')
  end
else
  table.insert(ct, '<error>"lfs.dll"がありません</error></entry>')
end

cl=0
for i,v in ipairs(ct) do cl=cl+#v end
mg.write('HTTP/1.1 200 OK\r\nContent-Type: text/xml\r\nContent-Length: '..cl..'\r\nConnection: close\r\n\r\n')
for i,v in ipairs(ct) do mg.write(v) end
